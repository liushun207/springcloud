server:
  port: 9050

spring:
  application:
    name: stream-hello
  rabbitmq:
    host: localhost
    port: 5672
    username: springcloud
    password: 123456
#    # 开启confirms模式
#    publisher-confirms: true
#    publisher-returns: true
  cloud:
    stream:
      # 换一种配置方式更好，去掉 rabbit:  参考不同的mq源配置
      rabbit:
        bindings:
          # input 通道设置 分组 topic   与 output 一致
          input:
            group: hello1
            destination: raw-sensor-data
            # 开启消费者分区功能
            consumer:
              partitioned: true
              # 设置路由键
              binding-routing-key: "#"
            # json字符串
            # content-type: application/json
          # output 通道设置 分组 topic
          output:
            group: hello1
            destination: raw-sensor-data
            # 多开几个端 分开配置消费者 生产者
            producer:
#              confirmAckChannel: "DirectChannel"
      #              # 指定分区键的表达式规则，支持SpEL
#              partition-key-expression: payload
#              # 消息分区的数量
#              partition-count: 2
      # 设置消息分区的消费端节点数量为2
      instance-count: 2
      # 设置当前消费者的总实例数量 默认值 0
      instance-index: 0


# actuator 配置
management:
  endpoints:
    web:
      exposure:
        # 开启所有扩展点
        include: "*"
  endpoint:
    health:
      # health 允许显示所有信息
      show-details: always

eureka:
  client:
    service-url:
      defaultZone: http://peer1:1111/eureka/